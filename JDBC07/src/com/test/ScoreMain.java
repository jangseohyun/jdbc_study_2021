/*===================
   ScoreMain.java   
===================*/
// JDBC07


/*
○ 성적 처리 → 데이터베이스 연동(데이터베이스 연결 및 액션 처리)
             → Score DTO 클래스 활용(속성만 존재하는 클래스, getter/setter 구성)
             → ScoreDAO 클래스 활용(데이터베이스 액션 처리)
             → Process 클래스 활용(단위 기능 구성)
             
여러 명의 이름, 국어점수, 영어점수, 수학점수를 입력받아
총점, 평균을 연산하여 출력하는 프로그램을 구현한다.
※ 서브 메뉴 구성 → Process 클래스 활용

단, PreparedStatement 작업 객체를 활용하여 구성할 수 있도록 한다.


○ 실행 예시

=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
======================
>> 선택(1~5, -1 종료): 1

7번 학생 성적 입력(이름 국어 영어 수학): 안정미 50 60 70
>> 성적 입력이 완료되었습니다.
8번 학생 성적 입력(이름 국어 영어 수학): 이새롬 80 70 60
>> 성적 입력이 완료되었습니다.
9번 학생 성적 입력(이름 국어 영어 수학): .

=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
======================
>> 선택(1~5, -1 종료): 2

전체 인원: 8명
번호 이름     국어  영어  수학   총점   평균   석차
  1   선혜연    90    80    70    240   80.0    x
 ...
*/


package com.test;

import java.sql.SQLException;
import java.util.Scanner;


public class ScoreMain
{

	public static void main(String[] args) throws ClassNotFoundException, SQLException
	{
		Scanner sc = new Scanner(System.in);
		ScoreProcess prc = new ScoreProcess();
		
		do
		{
			System.out.println("=====[성적 처리]======");
			System.out.println("1. 성적 입력");
			System.out.println("2. 성적 전체 출력");
			System.out.println("3. 이름 검색 출력");
			System.out.println("4. 성적 수정");
			System.out.println("5. 성적 삭제");
			System.out.println("====================");
			System.out.print(">> 선택(1~5, -1 종료): ");
			int response = sc.nextInt();
			
			if (response == -1)
			{
				System.out.println("\n>> 시스템이 종료됩니다.");
				break;
			}
			
			switch (response)
			{
				case 1:
					prc.scoreInsert();
					break;
				case 2:
					prc.scoreSelectAll();
					break;
				case 3:
					prc.scoreSelectName();
					break;
				case 4:
					prc.scoreUpdate();
					break;
				case 5:
					prc.scoreDelete();
					break;
				case -1:
					System.out.println("\n>> 시스템이 종료됩니다.");
					return;
				default:
					System.out.println("\n>> 잘못 입력하셨습니다.");
					break;
			}
			
		} while (true);
	}
}

/*
[실행 결과]
=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
====================
>> 선택(1~5, -1 종료): 1

1번 학생의 이름, 성적 입력: 장서현 100 100 15

>> 성적 입력이 완료되었습니다.

2번 학생의 이름, 성적 입력: .

=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
====================
>> 선택(1~5, -1 종료): 2

전체 인원: 1
번호   이름    국어  영어  수학   총점  평균  석차
  1   장서현   100   100    15    215   71.7    1

=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
====================
>> 선택(1~5, -1 종료): 3

검색할 이름 입력: 장서현
번호   이름    국어  영어  수학   총점  평균  석차
  1   장서현   100   100    15    215   71.7    1

=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
====================
>> 선택(1~5, -1 종료): 4

수정할 번호 입력: 1
번호   이름    국어  영어  수학   총점  평균  석차
  1   장서현   100   100    15    215   71.7    1

수정 데이터 입력(이름 국어 영어 수학): 장서현 100 100 55
>> 수정이 완료되었습니다.

=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
====================
>> 선택(1~5, -1 종료): 5

삭제할 성적 번호를 입력하세요: 1

>> 1번의 성적 조회 결과
번호   이름    국어  영어  수학   총점  평균  석차
  1   장서현   100   100    55    255   85.0    1

삭제하시겠습니까?(1: 예, 2: 아니오): 2
>> 취소하셨습니다.

=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
====================
>> 선택(1~5, -1 종료): 5

삭제할 성적 번호를 입력하세요: 1

>> 1번의 성적 조회 결과
번호   이름    국어  영어  수학   총점  평균  석차
  1   장서현   100   100    55    255   85.0    1

삭제하시겠습니까?(1: 예, 2: 아니오): 1
>> 삭제되었습니다.

=====[성적 처리]======
1. 성적 입력
2. 성적 전체 출력
3. 이름 검색 출력
4. 성적 수정
5. 성적 삭제
====================
>> 선택(1~5, -1 종료): -1

>> 시스템이 종료됩니다.
*/